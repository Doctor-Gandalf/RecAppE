#!/usr/bin/python3
__author__ = 'Kellan Childers'

import curses
from mainscreen import MainScreen
from util import center_start


def app(stdscr):
    # Ensures a clean visual space.
    stdscr.clear()
    curses.curs_set(False)

    # Sets the three main colors for the Conway graph.
    # First color: text. Second color: background.
    curses.init_pair(1, curses.COLOR_WHITE, curses.COLOR_BLUE)
    curses.init_pair(2, curses.COLOR_BLACK, curses.COLOR_WHITE)
    curses.init_pair(3, curses.COLOR_BLACK, curses.COLOR_BLACK)
    stdscr.bkgd(' ', curses.color_pair(2))

    console_height, console_width = stdscr.getmaxyx()
    _, title_x = center_start(console_height, console_width, 1, 26)
    stdscr.addstr(0, title_x, "RecAppE by Kellan Childers", curses.A_BOLD | curses.A_UNDERLINE)

    stdscr.refresh()

    main_screen = MainScreen(console_height, console_width)
    main_screen.show_intro()
    main_screen.start_shopping_list()

    main_screen.add_item("onions", 5, "whole")
    main_screen.add_item("potatoes", 1, "cut")
    main_screen.add_item("potatoe", 1, "cut")
    main_screen.add_item("potatos", 1, "cut")
    main_screen.add_item("potates", 1, "cut")
    main_screen.add_item("potaoes", 1, "cut")
    main_screen.add_item("pottoes", 1, "cut")
    main_screen.add_item("poatoes", 1, "cut")
    main_screen.add_item("ptatoes", 1, "cut")
    main_screen.add_item("otatoes", 1, "cut")
    main_screen.add_item("tatos", 1, "cut")
    main_screen.add_item("potes", 1, "cut")
    main_screen.add_item("pates", 1, "cut")
    main_screen.add_item("potae", 1, "cut")
    main_screen.add_item("potao", 1, "cut")
    main_screen.add_item("potaes", 1, "cut")
    main_screen.add_item("poto", 1, "cut")
    main_screen.add_item("tatoes", 1, "cut")
    main_screen.add_item("potoes", 1, "cut")
    main_screen.add_item("atoes", 1, "cut")
    main_screen.add_item("pttoes", 1, "cut")
    main_screen.add_item("ptates", 1, "cut")

    while True:
        main_screen.clear_screen()
        main_screen.show_list()
        main_screen.do_command()

if __name__ == "__main__":
    # curses.wrapper ensures that program will always fully exit from curses mode if an error occurs.
    curses.wrapper(app)
